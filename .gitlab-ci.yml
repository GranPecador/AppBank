stages:
  - environment
  - lint
  - build
  - base_test
  - device_test
  # - deploy

.updateContainerJob:
  image: docker:stable
  stage: environment
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

updateContainer:
  extends: .updateContainerJob
  only:
    changes:
      - Dockerfile

ensureContainer:
  extends: .updateContainerJob
  allow_failure: true
  before_script:
    - "mkdir -p ~/.docker && echo '{\"experimental\": \"enabled\"}' > ~/.docker/config.json"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    # Skip update container `script` if the container already exists
    # via https://gitlab.com/gitlab-org/gitlab-ce/issues/26866#note_97609397 -> https://stackoverflow.com/a/52077071/796832
    - docker manifest inspect $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG > /dev/null && exit || true
  except:
    changes:
      - Dockerfile

lintDebug:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: lint
  # before_script:
  #   - chmod +x gradlew
  #   - "export VERSION_CODE=$(($CI_PIPELINE_IID)) && echo $VERSION_CODE"
  #   - "export VERSION_SHA=`echo ${CI_COMMIT_SHA:0:8}` && echo $VERSION_SHA"
    # - export JAVA_HOME=/usr/local/openjdk-8
    # - export PATH=$PATH:/usr/local/openjdk-8/bin/java
  script:
    # - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint
    - echo 1

assembleDebug:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: build
  # before_script:
  #   - chmod +x gradlew
  script:
    # - ./gradlew assembleDebug
    - echo 1
  # artifacts:
  #   paths:
  #   - app/build/outputs

debugTests:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: base_test
  # before_script:
  #   - chmod +x gradlew
  script:
    # - ./gradlew -Pci --console=plain :app:testDebug
    - echo 1

unitTest:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: base_test
  # before_script:
  #   - chmod +x gradlew
  script:
    # - ./gradlew -Pci --console=plain :app:test
    - echo 1

andoidTest:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: base_test
  # before_script:
  #   - chmod +x gradlew
  script:
    # - ./gradlew -Pci --console=plain :app:connectedAndroidTest
    - echo 1

.device_test_template: &adroid_test
  script:
    # - mkdir build_${release}_${arch}
    # - cd build_${release}_${arch}
    # - schroot -c Ubuntu_${release}_${arch}_ribuilder -- cmake .. -DCMAKE_BUILD_TYPE=Release
    # - schroot -c Ubuntu_${release}_${arch}_ribuilder -- make -j
    - echo "Model ${model} with android ${android_version} testing SUCCESS" 

device_test_galaxy_7:
# android_${model}_${android_version}:
  stage: device_test
  variables:
    model: "Samsung Galaxy S7"
    # model: ${model}
    # android_version: ${android_version}
    android_version: "8"
  <<: *adroid_test
  # with_items:
  #   - { model: "SamsungGalaxyS7", android_version: "8" }
  #   - { model: "SamsungGalaxyS7", android_version: "9" }
    # - { release: trusty, arch: i386 }
    # - { release: xenial, arch: amd64 }


# deploy:
#   image: maven:3.3.9-jdk-8
#   stage: deploy
#   script:
#     - 'cp ci_settings.xml /root/.m2/settings.xml'
#     - 'mvn deploy'
#   only:
#     - master
